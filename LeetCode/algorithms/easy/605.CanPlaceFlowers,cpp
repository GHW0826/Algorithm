class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        if (n == 0)
            return true;
        else if (flowerbed.size() < 2) {
            if (flowerbed[0] == 0 && n == 1)
                return true;
            return false;
        }
        
        int canPlaced = 0;
        if (flowerbed[0] == 0 && flowerbed[1] == 0) {
            ++canPlaced;
            flowerbed[0] = 1;
        }
        for (int i = 1; i < flowerbed.size() - 1; ++i) {
            if (flowerbed[i - 1] == 0 && 
                flowerbed[i] == 0 &&
                flowerbed[i + 1] == 0) {
                flowerbed[i] = 1;
                ++canPlaced;
            }
        }
        if (flowerbed[flowerbed.size() - 1] == 0 &&
            flowerbed[flowerbed.size() - 2] == 0) {
            ++canPlaced;
            flowerbed[flowerbed.size() - 1] = 1;
        }

        return (canPlaced >= n) ? true : false;
    }
};
